<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" autoReload="true" internalLogLevel="info" internalLogFile="internalLog.txt">
  <extensions>
    <add assembly="NLog.Web.AspNetCore" />
  </extensions>
  <!-- the targets to write to -->
  <targets>
    <!-- write to file -->
    <target xsi:type="File" name="alldata"  fileName="C:\\logs\\JWT_Authentication_Service_Logs-${shortdate}.log" layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />
    <!--<target name="logfile" xsi:type="File"    fileName="C:\logs\"+"example.log"/>-->
    <!-- another file log. Uses some ASP.NET core renderers -->
       <!--<target name="database" type="Database" connectionString="Data Source=MANGESH-PC\\SQLSERVER2019;initial catalog=EmployeeDetails;MultipleActiveResultSets=True;">  
            <commandText> insert into ExceptionLog ([TimeStamp],[Level],Logger, [Message], UserId, Exception, StackTrace) values (@TimeStamp, @Level, @Logger, @Message, case when len(@UserID) = 0 then null else @UserId end, @Exception, @StackTrace); </commandText>  
            <parameter name="@TimeStamp" layout="${date}" />  
            <parameter name="@Level" layout="${level}" />  
            <parameter name="@Logger" layout="${logger}" />  
            <parameter name="@Message" layout="${message}" />  
            <parameter name="@UserId" layout="${mdc:user_id}" />  
            <parameter name="@Exception" layout="${exception}" />  
            <parameter name="@StackTrace" layout="${stacktrace}" />  
            <dbProvider>System.Data.SqlClient</dbProvider>  
        </target>--> 
    <target xsi:type="Database"
            name="dbTarget"
            connectionString="Data Source=MANGESH-PC\\SQLSERVER2019;Initial Catalog=EmployeeDetails;Integrated Security=True;MultipleActiveResultSets=True"
            commandText="INSERT INTO [MyLogs](When,Message,Level,Exception,Trace,Logger) VALUES (getutcdate(),@msg,@level,@exception,@trace,@logger)">
      <parameter name="@msg" layout="${message}" />
      <parameter name="@level" layout="${level}" />
      <parameter name="@exception" layout="${exception}" />
      <parameter name="@trace" layout="${trace}" />
      <parameter name="@logger" layout="${logger}" />
    </target>
    <target xsi:type="File" name="otherFile-web" fileName="demo-Other-${shortdate}.log" layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />
  </targets>
  <!-- rules to map from logger name to target -->
  <rules>
    <logger name="*" minlevel="Error" writeTo="dbTarget" />
    <logger name="*" minlevel="Trace" writeTo="alldata" />
    <logger name="*" minlevel="Debug" writeTo="database" />
    <logger name="*" minlevel="Trace" writeTo="logfile" />
    <logger name="*" minlevel="Trace" writeTo="eventlog" />
    <!--Skip non-critical Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" maxLevel="Info" final="true" />
    <logger name="*" minlevel="Trace" writeTo="otherFile-web" />
  </rules>
</nlog>